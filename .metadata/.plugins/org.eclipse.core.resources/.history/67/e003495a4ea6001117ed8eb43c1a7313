package com.chens.clinicalhub.db.entity;

import java.io.Serializable;
import javax.persistence.*;
import java.util.Date;
import java.util.Set;


/**
 * The persistent class for the role database table.
 * 
 */
@Entity
@Table(name="role")
public class Role implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(unique=true, nullable=false, length=36)
	private String roleId;

	@Column(nullable=false)
	private byte active;

    @Temporal( TemporalType.TIMESTAMP)
	@Column(nullable=false)
	private Date createdAt;

	@Column(length=500)
	private String roleDesc;

	@Column(nullable=false, length=150)
	private String roleName;

    @Temporal( TemporalType.TIMESTAMP)
	private Date updatedAt;

	//bi-directional many-to-many association to User
    @ManyToMany
	@JoinTable(
		name="user_has_role"
		, joinColumns={
			@JoinColumn(name="RoleId", nullable=false)
			}
		, inverseJoinColumns={
			@JoinColumn(name="UserId", nullable=false)
			}
		)
	private Set<User> users;

    public Role() {
    }

	public String getRoleId() {
		return this.roleId;
	}

	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	public byte getActive() {
		return this.active;
	}

	public void setActive(byte active) {
		this.active = active;
	}

	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public String getRoleDesc() {
		return this.roleDesc;
	}

	public void setRoleDesc(String roleDesc) {
		this.roleDesc = roleDesc;
	}

	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}
	
}